# This is the main build configuration, that build and tests the libraries
name: $(Rev:r)

variables:
  BuildConfiguration: Release
  TargetVmImage: windows-latest

jobs:
- job: build
  displayName: Library build
  pool:
    vmImage: $(TargetVmImage)
  steps:
  - task: NuGetToolInstaller@1
    displayName: Install latest NuGet
  - task: DotNetCoreInstaller@1
    displayName: Use .NET Core sdk 3.1
    inputs:
      version: 3.1.x
  - task: DotNetCoreCLI@2
    displayName: dotnet restore
    inputs:
      command: restore
      includeNuGetOrg: true
      noCache: true
  - task: PowerShell@2
    displayName: Run build script (lib only, release mode)
    inputs:
      targetType: filePath
      filePath: ./scripts/buildRelease.ps1
      arguments: '"-p:Version=2.0.0.$(Build.BuildNumber)-preview2-vipps"'
  - task: NuGetCommand@2
    displayName: Upload NuGet packages
    inputs:
      command: 'push'
      packagesToPush: '$(Build.SourcesDirectory)/Src/**/bin/Release/*.nupkg'
      feedsToUse: 'select'
      publishVstsFeed: 'release'
      allowPackageConflicts: true
  - task: DotNetCoreCLI@2
    displayName: Publish website
    inputs:
      command: publish
      arguments: '--configuration $(BuildConfiguration) --output $(build.ArtifactStagingDirectory) --framework netcoreapp3.1'
  - task: PublishBuildArtifacts@1
    displayName: Copy website to artifacts
    inputs:
      ArtifactName: demodrop
  - task: DotNetCoreCLI@2
    displayName: Run unit tests
    inputs:
      command: test
      projects: '**/Test.csproj'
      arguments: --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:ExcludeByFile="**/ExternalLibs/**"
